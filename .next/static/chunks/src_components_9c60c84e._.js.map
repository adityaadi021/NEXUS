{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ACRONE/Desktop/NEXUS%20WEBSITE/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root> & { indicatorClassName?: string }\n>(({ className, value, indicatorClassName, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className={cn(\"h-full w-full flex-1 bg-primary transition-all\", indicatorClassName)}\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,kBAAkB,EAAE,GAAG,OAAO,EAAE,oBACrD,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;YAChE,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ACRONE/Desktop/NEXUS%20WEBSITE/src/components/tournament/SlotCounter.tsx"],"sourcesContent":["\"use client\";\n\nimport { Progress } from \"@/components/ui/progress\";\nimport { cn } from '@/lib/utils';\n\ninterface SlotCounterProps {\n  initialAvailableSlots: number;\n  maxSlots: number;\n}\n\nexport function SlotCounter({ initialAvailableSlots, maxSlots }: SlotCounterProps) {\n  // The availableSlots state and useEffect for simulation have been removed.\n  // The component now directly uses initialAvailableSlots.\n\n  const percentage = maxSlots > 0 ? (initialAvailableSlots / maxSlots) * 100 : 0;\n  const currentAvailableSlots = initialAvailableSlots < 0 ? 0 : initialAvailableSlots; // Ensure it doesn't go below 0\n\n  return (\n    <div className=\"space-y-2\">\n      <div className=\"flex justify-between items-center\">\n        <p className={cn(\n          \"text-sm font-medium transition-colors duration-300\", // Removed scale animation trigger for simplicity\n          currentAvailableSlots === 0 ? \"text-destructive\" : \"text-foreground\"\n        )}>\n          Teams Available: {currentAvailableSlots}/{maxSlots}\n        </p>\n        {currentAvailableSlots === 0 && <span className=\"text-xs text-destructive font-semibold\">FULL</span>}\n      </div>\n      <Progress value={percentage} className=\"h-3 transition-all duration-500 ease-out\" \n        indicatorClassName={ // Ensure correct property name for Radix Progress\n          currentAvailableSlots === 0 ? \"bg-destructive\" : \n          percentage < 25 ? \"bg-orange-500\" : \n          percentage < 50 ? \"bg-yellow-500\" : \n          \"bg-primary\"\n        }\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAUO,SAAS,YAAY,EAAE,qBAAqB,EAAE,QAAQ,EAAoB;IAC/E,2EAA2E;IAC3E,yDAAyD;IAEzD,MAAM,aAAa,WAAW,IAAI,AAAC,wBAAwB,WAAY,MAAM;IAC7E,MAAM,wBAAwB,wBAAwB,IAAI,IAAI,uBAAuB,+BAA+B;IAEpH,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAE,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACb,sDACA,0BAA0B,IAAI,qBAAqB;;4BAClD;4BACiB;4BAAsB;4BAAE;;;;;;;oBAE3C,0BAA0B,mBAAK,6LAAC;wBAAK,WAAU;kCAAyC;;;;;;;;;;;;0BAE3F,6LAAC,uIAAA,CAAA,WAAQ;gBAAC,OAAO;gBAAY,WAAU;gBACrC,oBACE,0BAA0B,IAAI,mBAC9B,aAAa,KAAK,kBAClB,aAAa,KAAK,kBAClB;;;;;;;;;;;;AAKV;KA5BgB","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ACRONE/Desktop/NEXUS%20WEBSITE/src/components/tournament/WaitlistButton.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport { Button } from \"@/components/ui/button\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { MailPlus, CheckCircle } from 'lucide-react';\n\nexport function WaitlistButton({ tournamentName }: { tournamentName: string }) {\n  const [isWaitlisted, setIsWaitlisted] = useState(false);\n  const { toast } = useToast();\n\n  const handleWaitlist = () => {\n    // Simulate API call\n    setIsWaitlisted(true);\n    toast({\n      title: \"Joined Waitlist!\",\n      description: `You'll be notified if a slot opens up for ${tournamentName}.`,\n      variant: \"default\",\n    });\n  };\n\n  return (\n    <Button \n      onClick={handleWaitlist} \n      disabled={isWaitlisted}\n      className=\"w-full font-headline flex items-center gap-2\"\n      variant=\"outline\"\n    >\n      {isWaitlisted ? (\n        <>\n          <CheckCircle className=\"w-5 h-5 text-green-500\" />\n          <span>On Waitlist</span>\n        </>\n      ) : (\n        <>\n          <MailPlus className=\"w-5 h-5\" />\n          <span>Join Waitlist</span>\n        </>\n      )}\n    </Button>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAAA;;;AALA;;;;;AAOO,SAAS,eAAe,EAAE,cAAc,EAA8B;;IAC3E,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAEzB,MAAM,iBAAiB;QACrB,oBAAoB;QACpB,gBAAgB;QAChB,MAAM;YACJ,OAAO;YACP,aAAa,CAAC,0CAA0C,EAAE,eAAe,CAAC,CAAC;YAC3E,SAAS;QACX;IACF;IAEA,qBACE,6LAAC,qIAAA,CAAA,SAAM;QACL,SAAS;QACT,UAAU;QACV,WAAU;QACV,SAAQ;kBAEP,6BACC;;8BACE,6LAAC,8NAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;8BACvB,6LAAC;8BAAK;;;;;;;yCAGR;;8BACE,6LAAC,iNAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;8BACpB,6LAAC;8BAAK;;;;;;;;;;;;;AAKhB;GAlCgB;;QAEI,+HAAA,CAAA,WAAQ;;;KAFZ","debugId":null}}]
}